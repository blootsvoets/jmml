//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.08.11 at 05:21:44 PM CEST 
//


package eu.mapperproject.jmml.specification;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * <p>Java class for scale complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="scale">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="delta" type="{http://www.mapper-project.eu/xmml}range" minOccurs="0"/>
 *         &lt;element name="total" type="{http://www.mapper-project.eu/xmml}range" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="delta" type="{http://www.mapper-project.eu/xmml}unit" />
 *       &lt;attribute name="total" type="{http://www.mapper-project.eu/xmml}unit" />
 *       &lt;attribute name="characteristic" type="{http://www.mapper-project.eu/xmml}unit" />
 *       &lt;anyAttribute processContents='lax'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "scale", propOrder = {
    "delta",
    "total"
})
@XmlSeeAlso({
    MultiDimensionalScale.class
})
public class Scale {

    protected Range delta;
    protected Range total;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String id;
    @XmlAttribute(name = "delta")
    protected Unit regularDelta;
    @XmlAttribute(name = "total")
    protected Unit regularTotal;
    @XmlAttribute
    protected Unit characteristic;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the delta property.
     * 
     * @return
     *     possible object is
     *     {@link Range }
     *     
     */
    public Range getDelta() {
        return delta;
    }

    /**
     * Sets the value of the delta property.
     * 
     * @param value
     *     allowed object is
     *     {@link Range }
     *     
     */
    public void setDelta(Range value) {
        this.delta = value;
    }

    /**
     * Gets the value of the total property.
     * 
     * @return
     *     possible object is
     *     {@link Range }
     *     
     */
    public Range getTotal() {
        return total;
    }

    /**
     * Sets the value of the total property.
     * 
     * @param value
     *     allowed object is
     *     {@link Range }
     *     
     */
    public void setTotal(Range value) {
        this.total = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the regularDelta property.
     * 
     * @return
     *     possible object is
     *     {@link Unit }
     *     
     */
    public Unit getRegularDelta() {
        return regularDelta;
    }

    /**
     * Sets the value of the regularDelta property.
     * 
     * @param value
     *     allowed object is
     *     {@link Unit }
     *     
     */
    public void setRegularDelta(Unit value) {
        this.regularDelta = value;
    }

    /**
     * Gets the value of the regularTotal property.
     * 
     * @return
     *     possible object is
     *     {@link Unit }
     *     
     */
    public Unit getRegularTotal() {
        return regularTotal;
    }

    /**
     * Sets the value of the regularTotal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Unit }
     *     
     */
    public void setRegularTotal(Unit value) {
        this.regularTotal = value;
    }

    /**
     * Gets the value of the characteristic property.
     * 
     * @return
     *     possible object is
     *     {@link Unit }
     *     
     */
    public Unit getCharacteristic() {
        return characteristic;
    }

    /**
     * Sets the value of the characteristic property.
     * 
     * @param value
     *     allowed object is
     *     {@link Unit }
     *     
     */
    public void setCharacteristic(Unit value) {
        this.characteristic = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
