//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.08.11 at 06:37:51 PM CEST 
//


package eu.mapperproject.jmml.specification;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the eu.mapperproject.jmml.specification package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Timescale_QNAME = new QName("http://www.mapper-project.eu/xmml", "timescale");
    private final static QName _Element_QNAME = new QName("http://www.mapper-project.eu/xmml", "element");
    private final static QName _Submodel_QNAME = new QName("http://www.mapper-project.eu/xmml", "submodel");
    private final static QName _Description_QNAME = new QName("http://www.mapper-project.eu/xmml", "description");
    private final static QName _Extra_QNAME = new QName("http://www.mapper-project.eu/xmml", "extra");
    private final static QName _Mapper_QNAME = new QName("http://www.mapper-project.eu/xmml", "mapper");
    private final static QName _Spacescale_QNAME = new QName("http://www.mapper-project.eu/xmml", "spacescale");
    private final static QName _Filter_QNAME = new QName("http://www.mapper-project.eu/xmml", "filter");
    private final static QName _PortsIn_QNAME = new QName("http://www.mapper-project.eu/xmml", "in");
    private final static QName _PortsOut_QNAME = new QName("http://www.mapper-project.eu/xmml", "out");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: eu.mapperproject.jmml.specification
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Filter }
     * 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link Instance }
     * 
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link AnyContent }
     * 
     */
    public AnyContent createAnyContent() {
        return new AnyContent();
    }

    /**
     * Create an instance of {@link Submodel }
     * 
     */
    public Submodel createSubmodel() {
        return new Submodel();
    }

    /**
     * Create an instance of {@link Otherscale }
     * 
     */
    public Otherscale createOtherscale() {
        return new Otherscale();
    }

    /**
     * Create an instance of {@link InstancePort }
     * 
     */
    public InstancePort createInstancePort() {
        return new InstancePort();
    }

    /**
     * Create an instance of {@link Implementation }
     * 
     */
    public Implementation createImplementation() {
        return new Implementation();
    }

    /**
     * Create an instance of {@link Port }
     * 
     */
    public Port createPort() {
        return new Port();
    }

    /**
     * Create an instance of {@link Topology }
     * 
     */
    public Topology createTopology() {
        return new Topology();
    }

    /**
     * Create an instance of {@link Apply }
     * 
     */
    public Apply createApply() {
        return new Apply();
    }

    /**
     * Create an instance of {@link Definition }
     * 
     */
    public Definition createDefinition() {
        return new Definition();
    }

    /**
     * Create an instance of {@link Unit }
     * 
     */
    public Unit createUnit() {
        return new Unit();
    }

    /**
     * Create an instance of {@link Platform }
     * 
     */
    public Platform createPlatform() {
        return new Platform();
    }

    /**
     * Create an instance of {@link Definitions }
     * 
     */
    public Definitions createDefinitions() {
        return new Definitions();
    }

    /**
     * Create an instance of {@link MultiDimensionalScale }
     * 
     */
    public MultiDimensionalScale createMultiDimensionalScale() {
        return new MultiDimensionalScale();
    }

    /**
     * Create an instance of {@link Scale }
     * 
     */
    public Scale createScale() {
        return new Scale();
    }

    /**
     * Create an instance of {@link Mapper }
     * 
     */
    public Mapper createMapper() {
        return new Mapper();
    }

    /**
     * Create an instance of {@link Formula }
     * 
     */
    public Formula createFormula() {
        return new Formula();
    }

    /**
     * Create an instance of {@link Param }
     * 
     */
    public Param createParam() {
        return new Param();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link Library }
     * 
     */
    public Library createLibrary() {
        return new Library();
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link Datatype }
     * 
     */
    public Datatype createDatatype() {
        return new Datatype();
    }

    /**
     * Create an instance of {@link Version }
     * 
     */
    public Version createVersion() {
        return new Version();
    }

    /**
     * Create an instance of {@link Range }
     * 
     */
    public Range createRange() {
        return new Range();
    }

    /**
     * Create an instance of {@link Ports }
     * 
     */
    public Ports createPorts() {
        return new Ports();
    }

    /**
     * Create an instance of {@link ComputationalElement }
     * 
     */
    public ComputationalElement createComputationalElement() {
        return new ComputationalElement();
    }

    /**
     * Create an instance of {@link Coupling }
     * 
     */
    public Coupling createCoupling() {
        return new Coupling();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Scale }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "timescale")
    public JAXBElement<Scale> createTimescale(Scale value) {
        return new JAXBElement<Scale>(_Timescale_QNAME, Scale.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "element")
    public JAXBElement<Object> createElement(Object value) {
        return new JAXBElement<Object>(_Element_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Submodel }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "submodel", substitutionHeadNamespace = "http://www.mapper-project.eu/xmml", substitutionHeadName = "element")
    public JAXBElement<Submodel> createSubmodel(Submodel value) {
        return new JAXBElement<Submodel>(_Submodel_QNAME, Submodel.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnyContent }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "description")
    public JAXBElement<AnyContent> createDescription(AnyContent value) {
        return new JAXBElement<AnyContent>(_Description_QNAME, AnyContent.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnyContent }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "extra")
    public JAXBElement<AnyContent> createExtra(AnyContent value) {
        return new JAXBElement<AnyContent>(_Extra_QNAME, AnyContent.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Mapper }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "mapper", substitutionHeadNamespace = "http://www.mapper-project.eu/xmml", substitutionHeadName = "element")
    public JAXBElement<Mapper> createMapper(Mapper value) {
        return new JAXBElement<Mapper>(_Mapper_QNAME, Mapper.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultiDimensionalScale }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "spacescale")
    public JAXBElement<MultiDimensionalScale> createSpacescale(MultiDimensionalScale value) {
        return new JAXBElement<MultiDimensionalScale>(_Spacescale_QNAME, MultiDimensionalScale.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Filter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "filter", substitutionHeadNamespace = "http://www.mapper-project.eu/xmml", substitutionHeadName = "element")
    public JAXBElement<Filter> createFilter(Filter value) {
        return new JAXBElement<Filter>(_Filter_QNAME, Filter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Port }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "in", scope = Ports.class)
    public JAXBElement<Port> createPortsIn(Port value) {
        return new JAXBElement<Port>(_PortsIn_QNAME, Port.class, Ports.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Port }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.mapper-project.eu/xmml", name = "out", scope = Ports.class)
    public JAXBElement<Port> createPortsOut(Port value) {
        return new JAXBElement<Port>(_PortsOut_QNAME, Port.class, Ports.class, value);
    }

}
